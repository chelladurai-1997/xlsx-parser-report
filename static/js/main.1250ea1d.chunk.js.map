{"version":3,"sources":["components/stickyHeadTable.js","components/chart.js","components/navBar.js","components/uploadFile.js","components/home.js","App.js","reportWebVitals.js","index.js"],"names":["StickyHeadTable","props","React","page","setPage","rowsPerPage","setRowsPerPage","Paper","sx","width","overflow","TableContainer","maxHeight","Table","stickyHeader","options","columnsButton","TableHead","TableRow","columns","map","column","TableCell","align","style","minWidth","label","TableBody","rows","slice","row","hover","role","tabIndex","index","value","id","length","Box","component","p","m","border","Button","TablePagination","rowsPerPageOptions","count","onPageChange","event","newPage","onRowsPerPageChange","target","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","responsive","plugins","legend","position","title","display","text","Chart","data","graphData","Search","styled","theme","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","breakpoints","up","spacing","SearchIconWrapper","padding","height","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","NavBar","flexGrow","AppBar","Toolbar","IconButton","size","edge","mr","Typography","variant","noWrap","xs","sm","placeholder","inputProps","UploadFile","inputEl","useRef","useState","fileName","setFileName","onClick","current","click","onChange","e","ev","workBook","jsonData","reader","FileReader","file","files","name","onload","result","XLSX","read","type","SheetNames","reduce","initial","sheet","Sheets","utils","sheet_to_json","setExcelData","Sheet1","readAsBinaryString","onFileChange","ref","Item","typography","body2","textAlign","secondary","boxShadow","Home","setData","setGraphData","coulmnsConfig","setCoulmnsConfig","coulmnsActive","setCoulmnsActive","showTable","setShowTable","Object","keys","x","uploadedCoulmns","useEffect","filter","includes","allowDrop","preventDefault","Fragment","Grid","container","item","md","float","className","i","sec","Zoom","in","transitionDelay","draggable","onDragStart","v","console","log","dataTransfer","dropEffect","JSON","stringify","marginTop","Checkbox","defaultChecked","c","Alert","severity","onDragOver","onDrop","getData","parse","currSelected","labels","Name","datasets","App","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1250ea1d.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nexport default function StickyHeadTable(props) {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n      <TableContainer sx={{ maxHeight: 440 }}>\r\n        <Table\r\n          stickyHeader\r\n          aria-label=\"sticky table\"\r\n          options={{ columnsButton: true }}\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.columns.map((column) => (\r\n                <TableCell\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props?.rows\r\n              ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1}>\r\n                    {props?.columns?.map((column, index) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={value} align={column.align}>\r\n                          {value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div id=\"view-table-drop-indicator\">\r\n        {!props?.columns?.length > 0 && (\r\n          <Box component=\"span\" sx={{ p: 2, m: 2, border: \"1px dashed grey\" }}>\r\n            <Button>+ Drop here to view data</Button>\r\n          </Box>\r\n        )}\r\n      </div>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={props?.rows?.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      position: \"top\",\r\n    },\r\n    title: {\r\n      display: true,\r\n      text: \"Visualization\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default function Chart(props) {\r\n  return <Bar options={options} data={props?.graphData} />;\r\n}\r\n","import * as React from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            DnD XLSX Viewer/Report\r\n          </Typography>\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search…\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </Search>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nimport XLSX from \"xlsx\";\r\n\r\nexport default function UploadFile(props) {\r\n  const inputEl = useRef(null);\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const onFileChange = (ev) => {\r\n    let workBook = null;\r\n    let jsonData = null;\r\n    const reader = new FileReader();\r\n    const file = ev.target.files[0];\r\n    setFileName(file?.name);\r\n\r\n    reader.onload = (event) => {\r\n      const data = reader.result;\r\n      workBook = XLSX.read(data, { type: \"binary\" });\r\n      jsonData = workBook.SheetNames.reduce((initial, name) => {\r\n        const sheet = workBook.Sheets[name];\r\n        initial[name] = XLSX.utils.sheet_to_json(sheet);\r\n        return initial;\r\n      }, {});\r\n\r\n      props.setExcelData(jsonData?.Sheet1);\r\n      //   console.log(\"dataString\", jsonData);\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"secondary\" onClick={() => inputEl.current.click()}>\r\n        {\" \"}\r\n        {fileName ? fileName : \"+ Upload File\"}\r\n      </Button>\r\n\r\n      <input\r\n        style={{ display: \"none\" }}\r\n        onChange={(e) => onFileChange(e)}\r\n        ref={inputEl}\r\n        type=\"file\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport StickyHeadTable from \"./stickyHeadTable\";\r\nimport DragIndicatorIcon from \"@mui/icons-material/DragIndicator\";\r\nimport { Alert, Button, Checkbox, Zoom } from \"@mui/material\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport Chart from \"./chart\";\r\nimport NavBar from \"./navBar\";\r\nimport UploadFile from \"./uploadFile\";\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n  border: \"none\",\r\n  boxShadow: \"none\",\r\n}));\r\n\r\nexport default function Home() {\r\n  const [data, setData] = useState([]);\r\n  const rows = data;\r\n  const [graphData, setGraphData] = useState(null);\r\n  const [coulmnsConfig, setCoulmnsConfig] = useState([]);\r\n  const [coulmnsActive, setCoulmnsActive] = useState([]);\r\n  const [showTable, setShowTable] = useState(true);\r\n\r\n  const columns = Object.keys(data?.[0] || {}).map((x) => ({\r\n    id: x,\r\n    label: x,\r\n    minWidth: 170,\r\n  }));\r\n  const uploadedCoulmns = Object.keys(data?.[0] || {}) || [];\r\n\r\n  useEffect(() => {\r\n    setCoulmnsConfig(columns.filter((x) => coulmnsActive.includes(x.id)));\r\n  }, [coulmnsActive]);\r\n\r\n  const onDragStart = (e, v) => {\r\n    console.log(v);\r\n    e.dataTransfer.dropEffect = \"move\";\r\n    e.dataTransfer.setData(\"text/plain\", JSON.stringify(v));\r\n  };\r\n\r\n  const allowDrop = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  const onDropGraph = (e) => {\r\n    e.preventDefault();\r\n    const currSelected = e.dataTransfer.getData(\"text/plain\");\r\n    console.log(\"rechd\", JSON.parse(currSelected));\r\n    let labels = data.map((x) => x.Name);\r\n    setGraphData({\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: JSON.parse(currSelected),\r\n          data: data.map((x) => x[JSON.parse(currSelected)]),\r\n          backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  const onDropTable = (e) => {\r\n    e.preventDefault();\r\n    const data = e.dataTransfer.getData(\"text/plain\");\r\n    if (!coulmnsActive.includes(JSON.parse(data))) {\r\n      setCoulmnsActive([JSON.parse(data), ...coulmnsActive]);\r\n    }\r\n  };\r\n\r\n  const setExcelData = (data) => {\r\n    setData([]);\r\n    setGraphData(null);\r\n    setData(data);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {\" \"}\r\n      <NavBar />\r\n      <Box sx={{ flexGrow: 1 }} style={{ border: \"none\" }}>\r\n        <Grid container>\r\n          <Grid item xs={12} md={3}>\r\n            <Item style={{ float: \"left\" }}>\r\n              {\" \"}\r\n              <UploadFile setExcelData={setExcelData} />{\" \"}\r\n            </Item>\r\n          </Grid>\r\n          <Grid item xs={12} md={9}>\r\n            <h3>A Simple Data Visualization Tool⚙️.</h3>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Box sx={{ flexGrow: 1 }} style={{ border: \"none\" }}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={3}>\r\n            <Item>\r\n              {uploadedCoulmns?.length !== 0 && (\r\n                <>\r\n                  <Button\r\n                    className=\"mb-10\"\r\n                    onClick={() =>\r\n                      setCoulmnsActive(\r\n                        coulmnsActive?.length === 0 ? uploadedCoulmns : []\r\n                      )\r\n                    }\r\n                    style={{ float: \"left\" }}\r\n                    variant=\"text\"\r\n                    size=\"small\"\r\n                  >\r\n                    {coulmnsActive?.length === 0 ? \"Show\" : \"Hide\"} All\r\n                  </Button>\r\n\r\n                  <Button\r\n                    className=\"mb-10\"\r\n                    onClick={() => setShowTable(!showTable)}\r\n                    style={{ float: \"left\" }}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  >\r\n                    {showTable ? \"Show Graph\" : \"Show Table\"}\r\n                  </Button>\r\n                </>\r\n              )}\r\n              <table>\r\n                {uploadedCoulmns.map((item, i) => {\r\n                  let sec = `${(i + 1) * 150}ms`;\r\n                  return (\r\n                    <Zoom in={true} style={{ transitionDelay: sec }}>\r\n                      <tr\r\n                        draggable=\"true\"\r\n                        onDragStart={(e) => onDragStart(e, item)}\r\n                      >\r\n                        <td>\r\n                          <span style={{ marginTop: \"-8px\" }}>\r\n                            {\" \"}\r\n                            <DragIndicatorIcon className=\"vv\" />\r\n                          </span>\r\n                          <span>\r\n                            {\" \"}\r\n                            {item}\r\n                            {showTable && coulmnsActive.includes(item) && (\r\n                              <Checkbox\r\n                                className=\"checkbox-hover\"\r\n                                defaultChecked={coulmnsActive.includes(item)}\r\n                                onChange={() => {\r\n                                  if (coulmnsActive.includes(item)) {\r\n                                    setCoulmnsActive(\r\n                                      coulmnsActive.filter((c) => c !== item)\r\n                                    );\r\n                                  } else {\r\n                                    setCoulmnsActive([item, ...coulmnsActive]);\r\n                                  }\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </span>{\" \"}\r\n                        </td>\r\n                      </tr>\r\n                    </Zoom>\r\n                  );\r\n                })}\r\n                {uploadedCoulmns?.length === 0 && (\r\n                  <>\r\n                    <tr>\r\n                      <Alert severity=\"info\">\r\n                        No data. Please upload file!\r\n                      </Alert>\r\n                    </tr>\r\n                  </>\r\n                )}\r\n              </table>\r\n            </Item>\r\n          </Grid>\r\n          <Grid item xs={12} md={9}>\r\n            {showTable && uploadedCoulmns?.length > 0 && (\r\n              <Item>\r\n                {\" \"}\r\n                <div onDragOver={allowDrop} onDrop={onDropTable}>\r\n                  <StickyHeadTable columns={coulmnsConfig} rows={rows} />\r\n                </div>\r\n              </Item>\r\n            )}\r\n            {!showTable && (\r\n              <Item onDragOver={allowDrop} onDrop={onDropGraph}>\r\n                {\" \"}\r\n                <div>\r\n                  {graphData && (\r\n                    <Chart graphData={graphData} columns={coulmnsActive} />\r\n                  )}{\" \"}\r\n                  {!graphData && (\r\n                    <Box\r\n                      component=\"span\"\r\n                      sx={{ p: 2, border: \"1px dashed grey\" }}\r\n                    >\r\n                      <Button>+ Drop here to create report</Button>\r\n                    </Box>\r\n                  )}\r\n                </div>\r\n              </Item>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import Home from \"./components/home\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nfunction App() {\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <div>\r\n        <Home />\r\n      </div>\r\n    </DndProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}